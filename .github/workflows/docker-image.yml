name: Build and Push Docker Image (Upstream Check)

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
    paths:
      - 'Dockerfile' # Only trigger if Dockerfile changes
  workflow_dispatch: # Allows manual trigger from GitHub UI
  schedule:
    - cron: '30 9 * * *' # Your current schedule: daily at 09:30 UTC

env:
  IMAGE_NAME: caddy-cloudflare # Your repository name
  REGISTRY: ghcr.io
  GITHUB_USERNAME: TheMoltenJack # Your GitHub username

  UPSTREAM_IMAGE_NAME: caddy
  UPSTREAM_IMAGE_TAG: latest

jobs:
  check_and_build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.GITHUB_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current upstream image digest
        id: upstream_digest
        run: |
          UPSTREAM_FULL_IMAGE_RUNTIME="${{ env.UPSTREAM_IMAGE_NAME }}:${{ env.UPSTREAM_IMAGE_TAG }}"
          echo "Pulling ${UPSTREAM_FULL_IMAGE_RUNTIME} to get its digest..."
          UPSTREAM_DIGEST=$(docker buildx imagetools inspect --format '{{.Digest}}' --platform linux/amd64 "${UPSTREAM_FULL_IMAGE_RUNTIME}")
          echo "Current upstream digest for ${UPSTREAM_FULL_IMAGE_RUNTIME}: ${UPSTREAM_DIGEST}"
          echo "UPSTREAM_DIGEST=${UPSTREAM_DIGEST}" >> $GITHUB_OUTPUT

      - name: Restore last known upstream digest from cache
        id: cache_digest
        uses: actions/cache/restore@v4
        with:
          path: ./.last_upstream_digest
          key: ${{ runner.os }}-upstream-digest-${{ env.UPSTREAM_IMAGE_NAME }}-${{ env.UPSTREAM_IMAGE_TAG }}

      - name: Compare digests and determine if build is required
        id: compare
        run: |
          LAST_DIGEST_FILE="./.last_upstream_digest"
          LAST_UPSTREAM_DIGEST="none"
          if [ -f "$LAST_DIGEST_FILE" ]; then
            LAST_UPSTREAM_DIGEST=$(cat "$LAST_DIGEST_FILE")
            echo "Last known upstream digest: ${LAST_UPSTREAM_DIGEST}"
          else
            echo "No last known upstream digest file found. This is likely the first run for this image or cache miss."
          fi

          CURRENT_UPSTREAM_DIGEST="${{ steps.upstream_digest.outputs.UPSTREAM_DIGEST }}"

          if [ "$CURRENT_UPSTREAM_DIGEST" != "$LAST_UPSTREAM_DIGEST" ]; then
            echo "Upstream image digest has changed or is new. Proceeding with build."
            echo "BUILD_REQUIRED=true" >> $GITHUB_OUTPUT
          else
            echo "Upstream image digest has NOT changed. Skipping build."
            echo "BUILD_REQUIRED=false" >> $GITHUB_OUTPUT
          fi

      - name: Get Docker metadata (Conditional)
        id: meta
        if: steps.compare.outputs.BUILD_REQUIRED == 'true'
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push Docker image (Conditional)
        if: steps.compare.outputs.BUILD_REQUIRED == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify pushed image (Conditional)
        if: steps.compare.outputs.BUILD_REQUIRED == 'true'
        run: |
          echo "Successfully pushed images:"
          echo "${{ steps.meta.outputs.tags }}"

      - name: Create digest file for cache
        if: steps.compare.outputs.BUILD_REQUIRED == 'true'
        run: echo "${{ steps.upstream_digest.outputs.UPSTREAM_DIGEST }}" > ./.last_upstream_digest

      - name: Save current upstream digest to cache (Conditional)
        if: steps.compare.outputs.BUILD_REQUIRED == 'true'
        uses: actions/cache/save@v4
        with:
          path: ./.last_upstream_digest
          key: ${{ runner.os }}-upstream-digest-${{ env.UPSTREAM_IMAGE_NAME }}-${{ env.UPSTREAM_IMAGE_TAG }}
